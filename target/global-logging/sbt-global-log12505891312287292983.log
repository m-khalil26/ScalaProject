[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Khali\AppData\Local\Temp\idea5.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Khali\AppData\Local\Temp\idea5.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.7 (Amazon.com Inc. Java 17.0.11)
[debug] Load.defaultLoad until apply took 138.8598ms
[debug]                       Load.loadUnit: plugins took 81.2242ms
[debug]                       Load.loadUnit: defsScala took 0.2252ms
[debug] [Loading] Scanning directory C:\Users\Khali\Desktop\M1\S2\Scala\Projet\funprog-al\project\project\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Khali\Desktop\M1\S2\Scala\Projet\funprog-al\project\project\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 14.7788 ms
[debug]                           Load.resolveProject(funprog-al-build-build-build) took 35.9814ms
[debug]                         Load.loadTransitive: finalizeProject(Project(id funprog-al-build-build-build, base: C:\Users\Khali\Desktop\M1\S2\Scala\Projet\funprog-al\project\project\project, plugins: List(<none>))) took 67.1854ms
[debug] [Loading] Done in C:\Users\Khali\Desktop\M1\S2\Scala\Projet\funprog-al\project\project\project, returning: (funprog-al-build-build-build)
[debug]                       Load.loadUnit: loadedProjectsRaw took 83.3229ms
[debug]                       Load.loadUnit: cleanEvalClasses took 0.1856ms
[debug]                     Load.loadUnit(file:/C:/Users/Khali/Desktop/M1/S2/Scala/Projet/funprog-al/project/project/project/, ...) took 170.3077ms
[debug]                   Load.apply: load took 323.7287ms
[debug]                   Load.apply: resolveProjects took 4.2496ms
[debug]                   Load.apply: finalTransforms took 63.2082ms
[debug]                   Load.apply: config.delegates took 15.7527ms
[debug]                   Load.apply: Def.make(settings)... took 733.3717ms
[debug]                   Load.apply: structureIndex took 223.5056ms
[debug]                   Load.apply: mkStreams took 7.4374ms
[info] loading project definition from C:\Users\Khali\Desktop\M1\S2\Scala\Projet\funprog-al\project\project\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]                 Load.loadUnit: plugins took 2461.3154ms
[debug]                 Load.loadUnit: defsScala took 0.0402ms
[debug] [Loading] Scanning directory C:\Users\Khali\Desktop\M1\S2\Scala\Projet\funprog-al\project\project
[debug]                   Load.loadUnit: mkEval took 4.5981ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Khali\Desktop\M1\S2\Scala\Projet\funprog-al\project\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.8308 ms
[info] loading settings for project funprog-al-build-build from metals.sbt ...
[debug]                     Load.resolveProject(funprog-al-build-build) took 10.6331ms
[debug]                   Load.loadTransitive: finalizeProject(Project(id funprog-al-build-build, base: C:\Users\Khali\Desktop\M1\S2\Scala\Projet\funprog-al\project\project, plugins: List(<none>))) took 15.4156ms
[debug] [Loading] Done in C:\Users\Khali\Desktop\M1\S2\Scala\Projet\funprog-al\project\project, returning: (funprog-al-build-build)
[debug]                 Load.loadUnit: loadedProjectsRaw took 161.0162ms
[debug]                 Load.loadUnit: cleanEvalClasses took 12.3719ms
[debug]               Load.loadUnit(file:/C:/Users/Khali/Desktop/M1/S2/Scala/Projet/funprog-al/project/project/, ...) took 2635.9621ms
[debug]             Load.apply: load took 2637.4222ms
[debug]             Load.apply: resolveProjects took 0.1148ms
[debug]             Load.apply: finalTransforms took 7.7348ms
[debug]             Load.apply: config.delegates took 0.3264ms
[debug]             Load.apply: Def.make(settings)... took 61.582ms
[debug]             Load.apply: structureIndex took 26.691ms
[debug]             Load.apply: mkStreams took 0.0024ms
[info] loading project definition from C:\Users\Khali\Desktop\M1\S2\Scala\Projet\funprog-al\project\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]           Load.loadUnit: plugins took 3013.2748ms
[debug]           Load.loadUnit: defsScala took 0.0041ms
[debug] [Loading] Scanning directory C:\Users\Khali\Desktop\M1\S2\Scala\Projet\funprog-al\project
[debug]             Load.loadUnit: mkEval took 0.557ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Khali\Desktop\M1\S2\Scala\Projet\funprog-al\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(bloop.integrations.sbt.BloopPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(bloop.integrations.sbt.BloopPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,bloop.integrations.sbt.BloopPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.2601 ms
[info] loading settings for project funprog-al-build from metals.sbt,idea5.sbt ...
[debug]               Load.resolveProject(funprog-al-build) took 18.1607ms
[debug]             Load.loadTransitive: finalizeProject(Project(id funprog-al-build, base: C:\Users\Khali\Desktop\M1\S2\Scala\Projet\funprog-al\project, plugins: List(<none>))) took 21.0105ms
[debug] [Loading] Done in C:\Users\Khali\Desktop\M1\S2\Scala\Projet\funprog-al\project, returning: (funprog-al-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 155.1911ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.6721ms
[debug]         Load.loadUnit(file:/C:/Users/Khali/Desktop/M1/S2/Scala/Projet/funprog-al/project/, ...) took 3174.0486ms
[debug]       Load.apply: load took 3176.3496ms
[debug]       Load.apply: resolveProjects took 0.2127ms
[debug]       Load.apply: finalTransforms took 15.3948ms
[debug]       Load.apply: config.delegates took 0.3456ms
[debug]       Load.apply: Def.make(settings)... took 61.1513ms
[debug]       Load.apply: structureIndex took 33.0005ms
[debug]       Load.apply: mkStreams took 0.0027ms
[info] loading project definition from C:\Users\Khali\Desktop\M1\S2\Scala\Projet\funprog-al\project
[debug] Evaluating tasks: bloopInstall
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[success] Generated .bloop\funprog-al-build.json
[success] Total time: 3 s, completed 13 juil. 2024, 18:05:46
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 6851.4432ms
[debug]     Load.loadUnit: defsScala took 0.004ms
[debug] [Loading] Scanning directory C:\Users\Khali\Desktop\M1\S2\Scala\Projet\funprog-al
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Khali\Desktop\M1\S2\Scala\Projet\funprog-al, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(bloop.integrations.sbt.BloopPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(bloop.integrations.sbt.BloopPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,bloop.integrations.sbt.BloopPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.695 ms
[debug]         Load.resolveProject(funprog-al) took 49.6508ms
[debug]       Load.loadTransitive: finalizeProject(Project(id funprog-al, base: C:\Users\Khali\Desktop\M1\S2\Scala\Projet\funprog-al, plugins: List(<none>))) took 54.0282ms
[debug] [Loading] Done in C:\Users\Khali\Desktop\M1\S2\Scala\Projet\funprog-al, returning: (funprog-al)
[debug]     Load.loadUnit: loadedProjectsRaw took 55.0683ms
[debug]     Load.loadUnit: cleanEvalClasses took 0.0101ms
[debug]   Load.loadUnit(file:/C:/Users/Khali/Desktop/M1/S2/Scala/Projet/funprog-al/, ...) took 6909.021ms
[debug] Load.apply: load took 6926.9013ms
[debug] Load.apply: resolveProjects took 0.0827ms
[debug] Load.apply: finalTransforms took 19.5159ms
[debug] Load.apply: config.delegates took 0.2341ms
[debug] Load.apply: Def.make(settings)... took 74.0328ms
[debug] Load.apply: structureIndex took 20.7059ms
[debug] Load.apply: mkStreams took 0.0053ms
[info] set current project to funprog-al (in build file:/C:/Users/Khali/Desktop/M1/S2/Scala/Projet/funprog-al/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 61003 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 61003, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by no settings or tasks.
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by no settings or tasks.
[info] Reapplying settings...
[info] set current project to funprog-al (in build file:/C:/Users/Khali/Desktop/M1/S2/Scala/Projet/funprog-al/)
[debug] > Exec(idea-shell, None, None)
